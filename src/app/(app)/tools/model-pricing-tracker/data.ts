export interface AIModelPricing {
	model: string;
	company: string;
	inputCost: number; // $/MTok
	outputCost: number; // $/MTok,
	contextLength: number; // tokens
	tokenizer: string; // huggingface
}

export const aiModelPricings: AIModelPricing[] = [
	{
		model: "GPT-4.1 nano",
		company: "OpenAI",
		inputCost: 0.1,
		outputCost: 0.4,
		contextLength: 1_000_000,
		tokenizer: "xenova/gpt-4o",
	},
	{
		model: "GPT-4o-mini",
		company: "OpenAI",
		inputCost: 0.15,
		outputCost: 0.6,
		contextLength: 128_000,
		tokenizer: "xenova/gpt-4o",
	},
	{
		model: "Command-R",
		company: "Cohere",
		inputCost: 0.15,
		outputCost: 0.6,
		contextLength: 128_000,
		tokenizer: "xenova/c4ai-command-r-v01-tokenizer",
	},
	{
		model: "GPT-4o-mini-finetune",
		company: "OpenAI",
		inputCost: 0.3,
		outputCost: 1.2,
		contextLength: 128_000,
		tokenizer: "xenova/gpt-4o",
	},
	{
		model: "Mistral Small 24.09",
		company: "Mistral",
		inputCost: 0.2,
		outputCost: 0.6,
		contextLength: 32_000,
		tokenizer: "xenova/mistral-tokenizer-v3",
	},
	{
		model: "Claude 3 Haiku",
		company: "Anthropic",
		inputCost: 0.25,
		outputCost: 1.25,
		contextLength: 200_000,
		tokenizer: "xenova/claude-tokenizer",
	},
	{
		model: "Mistral Codestral",
		company: "Mistral",
		inputCost: 0.3,
		outputCost: 0.9,
		contextLength: 256_000,
		tokenizer: "xenova/mistral-tokenizer-v3",
	},
	{
		model: "GPT-4.1 mini",
		company: "OpenAI",
		inputCost: 0.4,
		outputCost: 1.6,
		contextLength: 1_000_000,
		tokenizer: "xenova/gpt-4o",
	},
	{
		model: "Gemini Pro",
		company: "Google",
		inputCost: 0.5,
		outputCost: 1.5,
		contextLength: 30_720,
		tokenizer: "xenova/gemma2-tokenizer",
	},
	{
		model: "Claude 3.5 Haiku",
		company: "Anthropic",
		inputCost: 0.8,
		outputCost: 4,
		contextLength: 200_000,
		tokenizer: "xenova/claude-tokenizer",
	},
	{
		model: "o4-mini",
		company: "OpenAI",
		inputCost: 1.1,
		outputCost: 4.4,
		contextLength: 128_000,
		tokenizer: "xenova/gpt-4o",
	},
	{
		model: "Mistral Large 24.11",
		company: "Mistral",
		inputCost: 2,
		outputCost: 6,
		contextLength: 131_000,
		tokenizer: "xenova/mistral-tokenizer-v3",
	},
	{
		model: "GPT-4.1",
		company: "OpenAI",
		inputCost: 2.0,
		outputCost: 8.0,
		contextLength: 1_000_000,
		tokenizer: "xenova/gpt-4o",
	},
	{
		model: "Command-R+",
		company: "Cohere",
		inputCost: 2.5,
		outputCost: 10.0,
		contextLength: 128_000,
		tokenizer: "xenova/c4ai-command-r-plus-08-2024-tokenizer",
	},
	{
		model: "GPT-4o",
		company: "OpenAI",
		inputCost: 2.5,
		outputCost: 10.0,
		contextLength: 128_000,
		tokenizer: "xenova/gpt-4o",
	},
	{
		model: "Claude 3.5 Sonnet",
		company: "Anthropic",
		inputCost: 3,
		outputCost: 15,
		contextLength: 200_000,
		tokenizer: "xenova/claude-tokenizer",
	},
	{
		model: "Claude 3.7 Sonnet",
		company: "Anthropic",
		inputCost: 3,
		outputCost: 15,
		contextLength: 200_000,
		tokenizer: "xenova/claude-tokenizer",
	},
	{
		model: "GPT-4o-2024-08-06-finetune",
		company: "OpenAI",
		inputCost: 3.75,
		outputCost: 15,
		contextLength: 128_000,
		tokenizer: "xenova/gpt-4o",
	},
	{
		model: "o3",
		company: "OpenAI",
		inputCost: 10.0,
		outputCost: 40.0,
		contextLength: 128_000,
		tokenizer: "xenova/gpt-4o",
	},
	{
		model: "o1",
		company: "OpenAI",
		inputCost: 15,
		outputCost: 60,
		contextLength: 200_000,
		tokenizer: "xenova/gpt-4o",
	},
	{
		model: "Claude 3 Opus",
		company: "Anthropic",
		inputCost: 15,
		outputCost: 75,
		contextLength: 200_000,
		tokenizer: "xenova/claude-tokenizer",
	},
	{
		model: "GPT-4.5",
		company: "OpenAI",
		inputCost: 75,
		outputCost: 150,
		contextLength: 128_000,
		tokenizer: "xenova/gpt-4o",
	},
	{
		model: "o1-pro",
		company: "OpenAI",
		inputCost: 150,
		outputCost: 600,
		contextLength: 200_000,
		tokenizer: "xenova/gpt-4o",
	},
];
